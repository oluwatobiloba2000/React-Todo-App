{"version":3,"sources":["components/Header.js","components/TodoCount.js","components/AddTodo.js","components/User.js","components/Todos.js","components/TodoContainer.js","components/TodoApp.js","serviceWorker.js","index.js","images/todo-pics.png"],"names":["Header","className","TodoCount","props","index","AddTodo","state","error","undefined","handleAddTodo","e","preventDefault","todoInputValue","target","elements","todoInput","value","trim","setState","this","class","autoComplete","onSubmit","type","name","required","React","Component","User","currentUser","changeUser","prompt","trimmedName","ownerfromDB","localStorage","getItem","owner","JSON","parse","preprops","prevState","setItem","stringify","onClick","Time","now","setInterval","Date","toLocaleString","Todos","todos","handleDeleteTodo","TodoContainer","length","src","image","alt","map","todo","key","Todoapp","getFullDate","date","todoToValidate","indexOf","concat","optionToDelete","filter","todoFromDB","parsedTodo","console","todosAvaliable","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e5db2a30.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ()=>(\r\n    <div className=\"header__h1\">\r\n      <h1>Todo App</h1>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst TodoCount = (props) =>(\r\n    <div className=\"todo__count__container\">\r\n     <h2>Total Todo : {props.index}</h2>\r\n    </div>\r\n)\r\n\r\nexport default TodoCount;","import React from 'react';\r\n\r\nclass AddTodo extends  React.Component{\r\n    state = {\r\n        error: undefined\r\n    }\r\n       handleAddTodo = (e) =>{\r\n        e.preventDefault();\r\n        const todoInputValue =  e.target.elements.todoInput.value.trim();\r\n        let error = this.props.handleAddTodo(todoInputValue);\r\n        this.setState(()=>({ error }))\r\n        if(!error){\r\n            e.target.elements.todoInput.value = ' '\r\n        }\r\n       }\r\n    render(){\r\n       return (\r\n       <div className=\"todo__form__container\">\r\n           {this.state.error && <p className=\"error__p\"><i class=\"fas fa-exclamation-triangle\"></i>{this.state.error}</p>}\r\n            <form autoComplete=\"false\" onSubmit={this.handleAddTodo}>\r\n            <input  className=\"todo__input\" type=\"text\" name=\"todoInput\" required />\r\n                <button className=\"todo__add__btn\">Add Todo</button>\r\n            </form>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\r\n\r\n\r\nclass User extends React.Component{\r\n    state = {\r\n        currentUser : undefined\r\n    }\r\n\r\n    componentDidMount(){\r\n        const ownerfromDB = localStorage.getItem('Owner');\r\n        const owner = JSON.parse(ownerfromDB);\r\n        this.setState(()=>({ currentUser : owner}))\r\n\r\n        if(owner === undefined || owner === null || owner === ''){\r\n            let name = prompt('what is your name ?')\r\n            if(name){\r\n                let trimmedName = name.trim()\r\n                return  this.setState(()=>({ currentUser : trimmedName}))\r\n            }\r\n        }\r\n    }\r\n\r\n    changeUser = (e) =>{\r\n        let name = prompt('what is your name ?')\r\n        if(name){\r\n            let trimmedName = name.trim();\r\n          return  this.setState(()=>({ currentUser : trimmedName}))\r\n        }\r\n        // e.target.setAttribute('contenteditable', 'true');\r\n        // const changeuser =  e.target.innerText;\r\n    }\r\n\r\n    componentDidUpdate(preprops, prevState){\r\n        if(prevState.currentUser !== this.state.currentUser){\r\n            return localStorage.setItem('Owner', JSON.stringify(this.state.currentUser))\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"user__container\">\r\n                <div className=\"username__container\">\r\n              {this.state.currentUser &&<div className=\"username__display__div\"><i className=\"fas fa-user\"></i>{this.state.currentUser}</div>}</div>\r\n              <Time />\r\n              <button className=\"changeUser__btn\" onClick={this.changeUser}>Choose a Username</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Time extends React.Component{\r\n    state = {\r\n        now: undefined\r\n    }\r\n\r\n    componentDidMount(){\r\n        setInterval(()=>{\r\n            this.setState(()=>(\r\n            {now: new Date().toLocaleString()}\r\n            ))\r\n        }, 1000)\r\n    }\r\n    render(){\r\n        return(<div className=\"time__container\">\r\n            <p>{this.state.now}</p>\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\n\r\n\r\nconst Todos = (props) =>(\r\n    <div className=\"todos\">\r\n      <div className=\"arrow\"></div>\r\n      <p className=\"todo__text\">{props.todos}</p>\r\n      <button className=\"todo__remove__btn\" onClick={(e)=>{\r\n          props.handleDeleteTodo(props.todos)\r\n      }}>X</button>\r\n    </div>\r\n)\r\n\r\nexport default Todos;","import React from 'react';\r\nimport Todos from './Todos';\r\nimport image from '../images/todo-pics.png'\r\n\r\nconst TodoContainer = (props)=>(\r\n    <div className=\"todos__display__container\">\r\n      {props.todos.length === 0 && <img src={image} alt=\"todo-default\" className=\"todo__empty__image\" />}\r\n      {props.todos.map((todo, index)=> <Todos key={index} todos={todo} handleDeleteTodo={props.handleDeleteTodo} />)}\r\n    </div>\r\n)\r\n\r\n//  <div className=\"todo__empty__image\"></div>\r\n\r\nexport default TodoContainer;","import React from 'react';\r\nimport Header from './Header';\r\nimport TodoCount from './TodoCount';\r\nimport AddTodo from './AddTodo';\r\nimport User from './User';\r\nimport TodoContainer from './TodoContainer';\r\n\r\n\r\nexport default class Todoapp extends React.Component{\r\n    state = {\r\n        todos: []\r\n    }\r\n    getFullDate = (date) =>{\r\n\r\n    }\r\n\r\n    handleAddTodo = (todoToValidate) =>{\r\n    if(!todoToValidate){\r\n        return 'Pls enter a todo'\r\n    }else if(this.state.todos.indexOf(todoToValidate) > -1){\r\n        return 'Todo already exist'\r\n    }\r\n    this.setState((prevState)=>({todos: prevState.todos.concat([todoToValidate])}))\r\n    }\r\n\r\n    handleDeleteTodo = (optionToDelete) =>{\r\n       this.setState((prevState)=>({\r\n           todos: prevState.todos.filter((todo)=>{return optionToDelete !== todo})\r\n       }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        try{\r\n            const todoFromDB = localStorage.getItem('todoDB')\r\n            const parsedTodo = JSON.parse(todoFromDB);\r\n            if(parsedTodo){\r\n                return  this.setState(()=>({ todos: parsedTodo }));\r\n            }\r\n        }catch(e){\r\n            console.error(e);\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(preprops, prevState){\r\n      if(prevState.todos.length !== this.state.todos.length){\r\n          localStorage.setItem('todoDB', JSON.stringify(this.state.todos))\r\n      }\r\n    }\r\n    render(){\r\n        return  (\r\n            <div>\r\n                <div className=\"header__top\">\r\n               <Header />\r\n               <AddTodo handleAddTodo={this.handleAddTodo} />\r\n                </div>\r\n               <User todosAvaliable={this.state.todos}/>\r\n               <TodoCount index={this.state.todos.length}/>\r\n               <TodoContainer todos={this.state.todos} handleDeleteTodo={this.handleDeleteTodo} />\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport TodoApp from './components/TodoApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TodoApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/todo-pics.ee744409.png\";"],"sourceRoot":""}